package entities;

import java.sql.Date;
import java.time.LocalDate;

public class Mitglied extends Entity {
    private final Musikverein mv;
    private final int mitgliedsnummer; // auto generated by SQL trigger
    private final String namen;
    private final Date geburtsdatum;
    private final Date beitrittsdatum;

    private static int number = 0;

    public Mitglied (Musikverein mv, String namen, Date geburtsdatum, Date beitrittsdatum) {
        if (mv == null) {
            throw new IllegalArgumentException("Entries.Mitglied: Invalid Entries.Musikverein: cannot be null");
        }
        if (namen.isEmpty() || namen.length() > 30) {
            throw new IllegalArgumentException("Entries.Mitglied: Invalid Namen: invalid length");
        }
        if (geburtsdatum.after(Date.valueOf(LocalDate.now()))) {
            throw new IllegalArgumentException("Entries.Mitglied: Invalid Geburtsdatum: cannot be in the future");
        }
        if (beitrittsdatum.after(Date.valueOf(LocalDate.now()))) {
            throw new IllegalArgumentException("Entries.Mitglied: Invalid Beitrittsdatum: cannot be in the future");
        }
        this.mv = mv;
        this.mitgliedsnummer = number++; // auto generated by SQL trigger
        this.namen = namen;
        this.geburtsdatum = geburtsdatum;
        this.beitrittsdatum = beitrittsdatum;
    }

    public Integer getMitgliedsnummer() {
        return mitgliedsnummer;
    }

    public String getNamen() {
        return namen;
    }

    public Date getGeburtsdatum() {
        return geburtsdatum;
    }

    public Date getBeitrittsdatum() {
        return beitrittsdatum;
    }

    public Musikverein getMv() {
        return mv;
    }

    @Override
    public String toString() {
        return mv.toString() + ", " + namen + ", " + mitgliedsnummer + "," + geburtsdatum + ", " + beitrittsdatum;
    }

    @Override
    public String getPrimaryKey() {
        return Integer.toString(mitgliedsnummer);
    }

    @Override
    public String getInsertStatement() {
        return "insert into Mitglied values('" + mv.getNamen() + "'," + mitgliedsnummer + ",'" + namen + "',TO_DATE('" + geburtsdatum + "','YYYY-MM-DD'),TO_DATE('" + beitrittsdatum + "','YYYY-MM-DD'))";

    }
}
